# -*- coding: utf-8 -*-
"""stack dan queue.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gVUPAgLcCd1PSPjOCtXudzCA87wf0sLz
"""

stack = []
stack.append('1')
stack.append('2')
stack.append('3')
stack.append('4')

stack
stack.pop()
stack

from collections import deque

Stack = deque()
Stack

Stack.append('1')
Stack.append('2')
Stack.append('3')
Stack.append('4')

Stack
len(Stack)

class stack:
  def __init__(self):
    self.container = deque()
  def push(self, x):
    self.container.append(x)
  def pop(self):
    self.container.pop()
  def peek(self):
    return self.container[-1]
  def is_empty(self):
    return len(self.container)==0
  def size(self):
    return len(self.container)

S = stack()
S.push(7)
S.push(1)

S.container

S.peek()

S.pop()

S.is_empty()

S.push(4)

S.size()

S.container

"""Queue"""

temp_transaksi=[]
temp_transaksi.insert(0, 70000)
temp_transaksi.insert(0, 80000)

temp_transaksi

temp_transaksi.pop()
temp_transaksi

q = deque()

q.appendleft(17)
q.appendleft(5)
q.appendleft(22)
q

q.pop()
q

class Queue:
  def __init__(self):
    self.buffer=deque()
  def enqueue(self, x):
    self.buffer.appendleft(x)
  def dequeue(self):
    return self.buffer.pop()
  def is_empty():
    return len(self.buffer)== 0
  def size(self):
    return len(self.buffer)

pq =Queue()
pq.enqueue(3)
pq.enqueue(9)
pq.enqueue(1)

pq.buffer

pq.dequeue()

pq.size()